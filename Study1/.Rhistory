# set knitting options
knitr::opts_chunk$set(include = FALSE)
# load relevant packages
library(tidyverse) # for data wrangling and viz
library(apaTables) # APA formatted descriptives & correlations table
library(lmSupport) #
library(jtools) #  summ to calculate sr2 values
library(olsrr)  # vif,tolerance to assess multicollinearity
library(interactions) # interaction figs
library(papaja) # apa formatted tables
library(lm.beta) # get p values for linear models
library(ggprism) # clean theme for plots
library(ggExtra) # add distributions to scatterplot
library(cowplot) # combine plots
# prepare data
# # socialness
# socialness <- read_csv("Data/Properties_data/SocialnessNorms_DiveicaPexmanBinney2021.csv")
# socialness <- socialness %>% dplyr::select(Word, Mean) %>% rename("Socialness" = "Mean")
#
# # Concreteness
# concreteness <- read_csv("Data/Properties_data/Brysbaert2013_Concreteness.csv")
# concreteness <- concreteness %>% dplyr::select(Word, Conc.M) %>% rename("Concreteness" = "Conc.M")
#
# # Valence
# emotion <- read_csv("Data/Properties_data/Warriner 2013 Emotion ratings.csv")
# emotion <- emotion %>% mutate(Valence_ext = abs(V.Mean.Sum - 5)) %>% # compute valence extremity
#   select(Word, Valence_ext)
#
# # OLD, SUBTL Word Frequency, visual LDT
# ELP <- read_csv("Data/Properties_data/ELP_Items.csv")
# ELP <- ELP %>% dplyr::select(Word, LgSUBTLWF, OLD, I_Zscore, I_Mean_Accuracy) %>%
#   rename("Frequency" = "LgSUBTLWF", "LDT_zRT" = "I_Zscore", "LDT_Accuracy" = "I_Mean_Accuracy")
#
# # Age of Acquisition
# aoa <- read_csv("Data/Properties_data/Kuperman_2012_AoA.csv")
# aoa <- aoa %>% dplyr::select(Word, Rating.Mean) %>%
#   rename("AoA.Rating" = "Rating.Mean")
#
# # Auditory lexical decision
# aud_LDT_dat <- read_csv("Data/Task_data/aelp.csv")
# aud_LDT_dat  <- aud_LDT_dat  %>% dplyr::select(word_us, n_phon, phono_upoint, pld20_m, us_ldt_zrt_m, us_ldt_acc, us_ldt_zrtmdur_m, uk_ldt_zrt_m, uk_ldt_acc, uk_ldt_zrtmdur_m, sg_ldt_zrt_m, sg_ldt_acc, sg_ldt_zrtmdur_m) %>%
#   rename("Word" = "word_us", "Phonemes_no" = "n_phon")
#
# # Calgary semantic decision task
# CDT <- read_csv("Data/Task_data/Pexman_2017.csv")
# CDT <- CDT %>% dplyr::select(Word, WordType, zRTclean_mean, ACC)
#
# # Recognition memory
# mem_dat1 <- read_csv("Data/Task_data/Cortese_2010.csv")
# mem_dat1 <- mem_dat1 %>% dplyr::select(item, both_hit, both_fa, both_h_fa) %>%
#   rename("Word" = "item", "Hits" = "both_hit", "FalseAlarms" = "both_fa", "Hit_min_FA" = "both_h_fa")
# mem_dat2 <- read_csv("Data/Task_data/recogmemcorteseetal2015.csv")
# mem_dat2 <- mem_dat2 %>% dplyr::select(item, e1e2hits, e1e2fas, e1e2hminfas) %>%
#   rename("Word" = "item", "Hits" = "e1e2hits", "FalseAlarms" = "e1e2fas", "Hit_min_FA" = "e1e2hminfas")
# mem_dat <- rbind(mem_dat1, mem_dat2)
# rm(mem_dat1, mem_dat2)
#
# # combine data
# data <- left_join(socialness, concreteness, by = "Word")
# data <- left_join(data, emotion, by = "Word")
# data <- left_join(data, ELP, by = "Word")
# data <- left_join(data, aoa, by = "Word")
# data <- left_join(data, CDT, by = "Word")
# data <- left_join(data, mem_dat, by = "Word")
# data <- left_join(data, aud_LDT_dat, by = "Word")
# data$Length <- sapply(data$Word, nchar) # calculate word length
# data <- data %>% distinct()
#
# # clean environment
# rm(ELP, aoa, aud_LDT_dat, CDT, mem_dat, socialness, concreteness, emotion)
# # save base dataset
# write_csv(data, "Data/Regressions_dataset.csv")
# load pre-prepared (see prep code above) dataset
data <- read_csv("Data/Regressions_dataset.csv")
data <- read_csv("Data/Regressions_dataset.csv")
LDT_dat <- data %>%
dplyr::select(Socialness, Frequency, Length, OLD, AoA.Rating, Concreteness, Valence_ext, LDT_zRT, LDT_Accuracy) %>%
drop_na() %>%
mutate(LDT_Errors = 1 - LDT_Accuracy) %>%
dplyr::select(-LDT_Accuracy) %>%
mutate(across(1:7, scale))
View(LDT_dat)
LDT_dat <- data %>%
dplyr::select(Socialness, Frequency, Length, OLD, AoA.Rating, Concreteness, Valence_ext, LDT_zRT, LDT_Accuracy) %>%
drop_na() %>%
mutate(LDT_Errors = 1 - LDT_Accuracy) %>%
dplyr::select(-LDT_Accuracy)
View(LDT_dat)
LDT_dat_descr <- LDT_dat %>%
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
View(LDT_dat_descr)
aud_LDT_dat_uk  <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Phonemes_no, AoA.Rating, pld20_m, phono_upoint, uk_ldt_zrt_m, uk_ldt_acc, uk_ldt_zrtmdur_m) %>% drop_na()
colnames(aud_LDT_dat_uk)[7:11] <- c("PLD", "Unique_pct", "LDT_zRT", "LDT_Accuracy", "LDT_zRTminDUR")
aud_LDT_dat_uk  <- aud_LDT_dat_uk %>% mutate(LDT_Errors = 1 - LDT_Accuracy) %>% dplyr::select(-LDT_Accuracy)
aud_LDT_dat_uk_descr <- aud_LDT_dat_uk %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
View(LDT_dat)
View(LDT_dat_descr)
View(aud_LDT_dat_uk_descr)
View(aud_LDT_dat_uk)
View(aud_LDT_dat_uk_descr)
CDT_dat <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Length, OLD, AoA.Rating, WordType, zRTclean_mean, ACC) %>% drop_na() %>%  mutate(SDT_Accuracy = as.numeric(sub("%","", ACC))/100) %>% mutate(SDT_Errors = 1 - SDT_Accuracy) %>% dplyr::select(-SDT_Accuracy, -ACC)
View(CDT_dat)
SDT_conc_dat_descr <- SDT_conc_dat %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
SDT_conc_dat <- CDT_dat %>% filter(WordType == "Concrete") %>% select(-WordType)
SDT_conc_dat_descr <- SDT_conc_dat %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
SDT_conc_dat <- SDT_conc_dat %>% mutate(across(1:7, scale)) # scale predictors
View(SDT_conc_dat)
View(SDT_conc_dat_descr)
SDT_abst_dat <- CDT_dat %>% filter(WordType == "Abstract") %>% select(-WordType)
SDT_abst_dat_descr <- SDT_abst_dat %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
SDT_abst_dat <- SDT_abst_dat %>% mutate(across(1:7, scale)) # scale predictors
mem_dat <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Length, OLD, AoA.Rating,Hits, FalseAlarms, Hit_min_FA) %>% mutate_all(as.numeric) %>% drop_na()
mem_dat_descr <- mem_dat_dat %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
mem_dat <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Length, OLD, AoA.Rating,Hits, FalseAlarms, Hit_min_FA) %>% mutate_all(as.numeric) %>% drop_na()
mem_dat_descr <- mem_dat %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
mem_dat <- mem_dat %>% mutate(across(1:7, scale)) # scale predictors
aud_LDT_dat_us  <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Phonemes_no, AoA.Rating, pld20_m, phono_upoint, us_ldt_zrt_m, us_ldt_acc, us_ldt_zrtmdur_m) %>% drop_na()
colnames(aud_LDT_dat_us)[7:11] <- c("PLD", "Unique_pct", "LDT_zRT", "LDT_Accuracy", "LDT_zRTminDUR")
aud_LDT_dat_us  <- aud_LDT_dat_us %>% mutate(LDT_Errors = 1 - LDT_Accuracy) %>% dplyr::select(-LDT_Accuracy)
aud_LDT_dat_us_descr <- aud_LDT_dat_us %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
aud_LDT_dat_us <- aud_LDT_dat_us %>% mutate(across(1:8, scale)) # scale predictors
View(aud_LDT_dat_us)
View(aud_LDT_dat_us_descr)
aud_LDT_dat_sg  <- data %>% dplyr::select(Socialness, Valence_ext, Concreteness, Frequency, Phonemes_no, AoA.Rating, pld20_m, phono_upoint, sg_ldt_zrt_m, sg_ldt_acc, sg_ldt_zrtmdur_m) %>% drop_na()
colnames(aud_LDT_dat_sg)[7:11] <- c("PLD", "Unique_pct", "LDT_zRT", "LDT_Accuracy", "LDT_zRTminDUR")
aud_LDT_dat_sg  <- aud_LDT_dat_sg %>% mutate(LDT_Errors = 1 - LDT_Accuracy) %>% dplyr::select(-LDT_Accuracy)
aud_LDT_dat_sg_descr <- aud_LDT_dat_sg %>% # calculate mean and SD for supp table
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness))
aud_LDT_dat_sg <- aud_LDT_dat_sg %>% mutate(across(1:8, scale)) # scale predictors
View(aud_LDT_dat_sg_descr)
View(aud_LDT_dat_uk_descr)
View(aud_LDT_dat_us_descr)
View(SDT_abst_dat_descr)
View(LDT_dat_descr)
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_abst_dat_descr, SDT_conc_dat_descr, mem_dat_descr)
View(descr)
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
View(descr)
?relocate
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
descr <- descr %>%
relocate(Dataset) %>%
mutate(across(2:6), round(.x,digits = 3))
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
descr <- descr %>%
relocate(Dataset) %>%
mutate(across(2:5), round(.x,digits = 3))
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
descr <- descr %>%
relocate(Dataset) %>%
mutate(across(2:5), round(digits = 3))
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
descr <- descr %>%
relocate(Dataset) %>%
mutate(across(2:5, round(digits = 3)))
descr <- rbind(LDT_dat_descr, aud_LDT_dat_uk_descr, SDT_conc_dat_descr, SDT_abst_dat_descr, mem_dat_descr)
descr["Dataset"] <- c("Visual LDT", "Auditory LDT", "Concreten SDT", "Abstract SDT", "RMT")
descr <- descr %>%
relocate(Dataset)
LDT_RT
LDT_dat <- data %>%
dplyr::select(Socialness, Frequency, Length, OLD, AoA.Rating, Concreteness, Valence_ext, LDT_zRT, LDT_Accuracy) %>%
drop_na() %>%
mutate(LDT_Errors = 1 - LDT_Accuracy) %>%
dplyr::select(-LDT_Accuracy)
LDT_dat_descr <- LDT_dat %>%
select(Socialness, Concreteness) %>%
summarise("Socialness M" = mean(Socialness), "Socialness SD" = sd(Socialness),
"Concreteness M" = mean(Concreteness), "Concreteness SD" = sd(Concreteness)) # calculate mean and SD for supplementary table (see below)
LDT_dat <- LDT_dat %>% mutate(across(1:7, scale)) # Z-trasnform data
# fit model RT
LDT_RT <- lm(LDT_zRT ~ Length + Frequency + OLD + AoA.Rating + Valence_ext + Concreteness + Socialness + Socialness*Concreteness, LDT_dat)
ols_vif_tol(LDT_RT) # Check Collinearity
LDT_RT_bweights <-summ(LDT_RT, digits = 3, part.corr = TRUE) #calculate sr2
LDT_RT_sr2 <- as.data.frame(LDT_RT_bweights$coeftable)
LDT_RT_sr2 <- LDT_RT_sr2 %>% select(Est., part.r) %>% na.omit() %>% mutate(sr2 = part.r^2)
LDT_RT_sr2 <- as.character(round(LDT_RT_sr2$sr2, 3))
LDT_RT <- lm.beta(LDT_RT) # get standardized betas
summary(LDT_RT)
LDT_RT$coefficients
summary(LDT_RT)
trial <- summary(LDT_RT)
View(trial)
trial[["coefficients"]]
trial <- summary(LDT_RT)$coefficients
